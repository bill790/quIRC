#!/usr/bin/python

import ctypes
import sys

header = '-h' in sys.argv

if header:
	print '#pragma once'
	print
print '''/*
	quIRC - simple terminal-based IRC client
	Copyright (C) 2010-13 Edward Cree

	See quirc.c for license information
	types: data types that lots of modules need

	Generated by gen_types.py; edit that or ctypes.py, not this file!
*/'''
if not header:
	print
	print '#include "types.h"'
	print '#include <string.h>'

for type, prefix, values in ctypes.types:
	print
	if header:
		print 'typedef enum {'
		for v in values:
			if isinstance(v, tuple):
				print '\t%s%s, // %s' % (prefix, v[0], v[1])
			else:
				print '\t%s%s,' % (prefix, v)
		print '}'
		print '%s;' % type
		print 'const char *%s_name(%s);' % (type, type)
		print '%s %s_from_name(const char *);' % (type, type)
	else:
		print 'const char *%s_name(%s x)' % (type, type)
		print '{'
		print '\tswitch(x)'
		print '\t{'
		for v in values:
			if isinstance(v, tuple): v=v[0]
			print '\t\tcase %s%s:' % (prefix, v)
			print '\t\t\treturn("%s");' % v
		print '\t\tdefault:'
		print '\t\t\treturn("?");'
		print '\t}'
		print '}'
		print
		print '%s %s_from_name(const char *x)' % (type, type)
		print '{'
		for v in values:
			if isinstance(v, tuple): v=v[0]
			print '\tif(strcmp(x, "%s")==0)' % v
			print '\t\treturn(%s%s);' % (prefix, v)
		print '\treturn(-1);'
		print '}'
